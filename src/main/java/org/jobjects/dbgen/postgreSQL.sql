CREATE USER MYUSERNAME WITH ENCRYPTED PASSWORD 'MYPASS';
GRANT ALL PRIVILEGES ON DATABASE POSTGRES TO MYUSERNAME;

CREATE SCHEMA IF NOT EXISTS MYSCHEMA AUTHORIZATION MYUSERNAME;

CREATE TABLE IF NOT EXISTS MYSCHEMA.MYTABLE ( MONCHAMPSTEXTE VARCHAR(6) NOT NULL, MONCHAMPSCHAR CHAR(2) NOT NULL, MONCHAMPSDATE DATE, MONCHAMPSDATETIME TIMESTAMP, MONCHAMPSDECIMAL DOUBLE );
CREATE TABLE IF NOT EXISTS MYSCHEMA.SECU_USER ( USERNAME VARCHAR(20) NOT NULL CONSTRAINT USERNAME_PK PRIMARY KEY, PASSWORD VARCHAR(64), MONCHAMPSDATETIME TIMESTAMP, GENDER VARCHAR(10), TITLE VARCHAR(15), FIRSTNAME VARCHAR(20), LASTNAME VARCHAR(20), STREET VARCHAR(120), CITY VARCHAR(40), STATE VARCHAR(40), POSTCODE VARCHAR(20), EMAIL VARCHAR(320));
CREATE TABLE IF NOT EXISTS MYSCHEMA.SECU_USER_ROLE ( USERNAME VARCHAR(20) NOT NULL, ROLENAME VARCHAR(255) NOT NULL, MONCHAMPSDATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP, CONSTRAINT SECU_USER_ROLE_PK PRIMARY KEY (USERNAME, ROLENAME), CONSTRAINT SECU_USER_ROLE_SECU_USER_FK FOREIGN KEY (USERNAME) REFERENCES MYSCHEMA.SECU_USER (USERNAME) );

CREATE USER MYUSERNAME WITH ENCRYPTED PASSWORD 'MYPASS';
GRANT ALL PRIVILEGES ON DATABASE POSTGRES TO MYUSERNAME;
CREATE SCHEMA IF NOT EXISTS MYSCHEMA AUTHORIZATION MYUSERNAME;
CREATE TABLE IF NOT EXISTS MYSCHEMA.MYTABLE ( 
	MONCHAMPSTEXTE VARCHAR(6) NOT NULL, 
	MONCHAMPSCHAR CHAR(2) NOT NULL, 
	MONCHAMPSDATE DATE, 
	MONCHAMPSDATETIME TIMESTAMP, MONCHAMPSDECIMAL DOUBLE PRECISION );
CREATE TABLE IF NOT EXISTS MYSCHEMA.SECU_USER (
	USERNAME VARCHAR(20) NOT NULL CONSTRAINT USERNAME_PK PRIMARY KEY, 
	PASSWORD VARCHAR(64), 
	MONCHAMPSDATETIME TIMESTAMP, 
	GENDER VARCHAR(10), TITLE VARCHAR(15), FIRSTNAME VARCHAR(20), 
	LASTNAME VARCHAR(20), STREET VARCHAR(120), CITY VARCHAR(40), 
	STATE VARCHAR(40), POSTCODE VARCHAR(20), EMAIL VARCHAR(320));
GRANT ALL PRIVILEGES ON MYSCHEMA.SECU_USER TO MYUSERNAME;
CREATE TABLE IF NOT EXISTS MYSCHEMA.SECU_USER_ROLE ( 
	USERNAME VARCHAR(20) NOT NULL, 
	ROLENAME VARCHAR(255) NOT NULL, 
	MONCHAMPSDATETIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
	CONSTRAINT SECU_USER_ROLE_PK PRIMARY KEY (USERNAME, ROLENAME), 
	CONSTRAINT SECU_USER_ROLE_SECU_USER_FK FOREIGN KEY (USERNAME) REFERENCES MYSCHEMA.SECU_USER (USERNAME) );

